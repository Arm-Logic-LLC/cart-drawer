<style>
  @media screen and (max-width: 989px) {
    .active_icon_one_url,
    .none_icon {
      display: none;
    }
  }
</style>
<script>
  const totalProducts = {{ collection.products_count }};
  if (
  localStorage.getItem("lastCollectionURL") !== window.location.href || 
  !localStorage.getItem("collectionMetaTitle")
  ) {
    localStorage.setItem("lastCollectionURL", window.location.href);
    localStorage.setItem("collectionMetaTitle", "{{ collection.metafields.custom.collection_title.value }}");
  }

  let productsLoaded = 8;
  let page = 2;
  let loading = false;
  function updateFilterURL() {
  const currentUrl = new URL(window.location.href);
  const viewType = window.innerWidth <= 989 ? 'grid-big' : 'grid';

  if (!currentUrl.searchParams.has('view')) {
    currentUrl.searchParams.append('view', viewType);
  }
  window.history.replaceState(null, '', currentUrl.href);
}
function reorderURLParams() {
  const currentUrl = new URL(window.location.href);
  const params = new URLSearchParams(currentUrl.search);
  const newParams = new URLSearchParams();

  for (const [key, value] of params) {
    if (key !== 'view') {
      newParams.append(key, value);
    }
  }

  if (params.has('view')) {
    newParams.append('view', params.get('view'));
  }

  currentUrl.search = newParams.toString();
  window.history.replaceState(null, '', currentUrl.href);
}

reorderURLParams();

updateFilterURL();

  const loadMoreProducts = () => {
    if (loading || productsLoaded >= totalProducts) return;
    loading = true;

    const url = `${window.location.pathname + window.location.search}&page=${page}`;

    fetch(url)
      .then(response => {
        if (!response.ok) {
          throw new Error('Network response was not ok');
        }
        
        return response.text();
      })
      .then(data => {
        const parser = new DOMParser();
        const newProducts = parser.parseFromString(data, 'text/html').querySelectorAll('.item_collection_grid-la');
        if (newProducts.length === 0) {
          loading = false;
          return;
        }

        const productContainer = document.getElementById('product-container');
        newProducts.forEach(product => {
          setTimeout(() => {
            product.classList.add("fade-in-la")
          }, 100)
          
          productContainer.appendChild(product);
        }); 

        productsLoaded += newProducts.length;
        console.log(productsLoaded);
        loading = false;
      })
      .catch(error => {
        console.error('Error loading more products:', error);
        loading = false;
      });
      page++
  };

  window.addEventListener('scroll', () => {
    if (window.innerHeight + window.scrollY >= document.body.offsetHeight - 600 && !loading) {
      loadMoreProducts();
    }
  });
</script>

<section class="grid_collection-two-la">
  <div class="filter_collection-la">
    <div class="filter_modal-la">
      <div class="filter_form-sorting">
        {% render 'filter_by_sorting-la' %}
      </div>
      {% render 'icon_filter-la' %}
    </div>
    <div class="icons_grid-la">
      {%- capture contentForQuerystring -%}{{ content_for_header }}{%- endcapture %}

      {%- assign pageUrl = contentForQuerystring
        | split: '"pageurl":"'
        | last
        | split: '"'
        | first
        | split: '.myshopify.com'
        | last
        | replace: '\/', '/'
        | replace: '%20', ' '
        | replace: '\u0026', '&'
      -%}

      {%- capture finalurl %}{{ pageUrl }}{% endcapture %}

      {% assign finalurl = finalurl
        | remove: '&_fd=0'
        | remove: '&pb=1'
        | remove: '&pb=0'
        | remove: '&_fd=1'
        | remove: '?_fd=0'
        | remove: '?pb=1'
        | remove: '?pb=0'
        | remove: '?_fd=1'
        | remove: '?view=grid'
        | remove: '?view=grid-big'
        | remove: '?view=grid-small'
        | remove: '&view=grid'
        | remove: '&view=grid-big'
        | remove: '&view=grid-small'
        | remove: '-small'
        | remove: '-big'
        | remove: 'armosshoes.ru'
        | remove: 'www.armosshoes.ru'
        | remove: 'www.armosshoes.com'
        | remove: 'armosshoes.com'
        | remove: 'armos.am'
        | remove: 'www.armos.am'
      %}

      {%- assign final_url_grid = finalurl %}
      {%- assign final_url_grid_big = finalurl %}
      {%- assign final_url_grid_small = finalurl %}

      {% unless finalurl contains 'view' %}
        {%- if finalurl contains '?' -%}
          {%- assign final_url_grid = finalurl | append: '&view=grid' -%}
          {%- assign final_url_grid_big = finalurl | append: '&view=grid-big' -%}
          {%- assign final_url_grid_small = finalurl | append: '&view=grid-small' -%}
        {%- else -%}
          {%- assign final_url_grid = finalurl | append: '?view=grid' -%}
          {%- assign final_url_grid_big = finalurl | append: '?view=grid-big' -%}
          {%- assign final_url_grid_small = finalurl | append: '?view=grid-small' -%}
        {%- endif %}
      {% endunless %}

      <a href="{{ final_url_grid }}" class="active_icon_one_url active_name_icons_all">
        {% render 'icons-grid_one' %}
      </a>
      <a href="{{ final_url_grid_big }}" class="active_icon_two_url active_name_icons_all  none_icon ">
        {% render 'icons_grid-two' %}
      </a>
      <a href="{{ final_url_grid_big }}" class="active_icon_two_url active_name_icons_all disactive">
        {% render 'icon-grid-mobile-two' %}
      </a>
      <a href="{{ final_url_grid_small }}" class="active_icon_three_url active_name_icons_all none_icon ">
        {% render 'icons_grid-three' %}
      </a>
      <a href="{{ final_url_grid_small }}" class="active_icon_three_url active_name_icons_all disactive">
        {% render 'icon-grid-three-mini' %}
      </a>
    </div>
    <div class="sort_by_filter-la"></div>
  </div>

  <div class="grid_collection-two_wrapper-la">
    <div
      class="continer-items-grid_collection-la grid-two-products-la continer-all-in-collection"
      id="product-container"
    >
      {% paginate collection.products by 8 %}
        {% for product in collection.products %}
          <div class="item_collection_grid-la all_sizeing ">
            <a href="{{ product.url }}" class="collection-grid-two-product-url-la">
              <img
                src="{{ product.featured_image | image_url: width: 800 }}"
                width="400"
                height="400"
                alt="{{ product.title }}"
                class="images_one"
                loading="lazy"
              >
              <img
                src="{{ product.images[1] | image_url: width: 800 }}"
                width="400"
                height="400"
                alt="{{ product.title }}"
                class="images_two"
                loading="lazy"
              >
              <p class="collection-product-title-la">{{ product.title }}</p>
              <p>{{ product.selected_or_first_available_variant.price | money }}</p>
            </a>
          </div>
        {% endfor %}
      {% endpaginate %}
    </div>
  </div>
  <div class="collection_title_dinamic-la">
    <a href="{{ shop.url }}">{{ shop.name | upcase }}</a> / <span>{{ collection.title | upcase }}</span>
  </div>
</section>

{% schema %}
{
  "name": "Product Grind",
  "class": "section",
  "settings": [
    {
      "type": "range",
      "id": "products_per_page",
      "min": 8,
      "max": 100,
      "step": 4,
      "default": 40,
      "label": "Products per page"
    },
    {
      "type": "range",
      "id": "columns_desktop",
      "min": 1,
      "max": 5,
      "step": 1,
      "default": 4,
      "label": "Number of columns on desktop"
    }
  ]
}
{% endschema %}
